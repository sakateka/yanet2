syntax = "proto3";

package ynpb;

option go_package = "github.com/yanet-platform/yanet2/controlplane/ynpb;ynpb";

// TODO: docs.
service PipelineService {
	// TODO: docs.
	rpc Update(UpdatePipelinesRequest) returns (UpdatePipelinesResponse) {
	}

	// Allows to delete pipeline with specified name
	// if it is not assigned to device.
	rpc Delete(DeletePipelineRequest) returns (DeletePipelineResponse);
}

// TODO: docs.
message UpdatePipelinesRequest {
	// Dataplane instance
	uint32 instance = 1;
	// TODO: docs.
	repeated Pipeline pipelines = 2;
}

// A pipeline chain.
message Pipeline {
	// Name of the pipeline.
	//
	// This name is used to identify the pipeline in the controlplane.
	string name = 1;
	// Nodes in the pipeline chain.
	//
	// The nodes are executed in order.
	repeated string functions = 2;
}

// TODO: docs.
message UpdatePipelinesResponse {
}

message DeletePipelineRequest {
	// Dataplane instance
	uint32 instance = 1;

	// Name of the pipeline
	string pipeline_name = 2;
}

message DeletePipelineResponse {
}

service DeviceService {
	rpc Update(UpdateDevicesRequest) returns (UpdateDevicesResponse) {
	}
}

message UpdateDevicesRequest {
	uint32 instance = 1;
	repeated Device devices = 2;
}

message Device {
	string name = 1;
	repeated DevicePipeline input = 2;
	repeated DevicePipeline output = 3;
}

message VlanDevice {
	string name = 1;
	uint32 vlan = 2;
	repeated DevicePipeline input = 3;
	repeated DevicePipeline output = 4;
}

message DevicePipeline {
	string name = 1;
	uint64 weight = 2;
}

message UpdateDevicesResponse {
}
